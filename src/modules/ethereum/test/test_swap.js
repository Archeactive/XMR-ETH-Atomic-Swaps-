// Imports
let eth  = require('../src/main')
let web3 = require('web3')
let crypto = require('crypto')

// Settings
let ETH = new eth()
let PrivKey	= ''
let PROJECTID = ''
let urlR = `https://ropsten.infura.io/v3/${PROJECTID}`
let {accounts,Contract,sendSignedTransaction} = new web3(urlR).eth
let utils = new web3(urlR).utils
let ropAccounts = [
  {Address:'',PrivKey:''},
  {Address:'',PrivKey:''},
  {Address:'',PrivKey:''}
]

// Maincode
// ETH.NewWallet('main',PrivKey).then(({address}) => {
//   ETH.AccountBalance('main',address).then(console.log)
// })

// Testing
// let ByteCode_Swapper = ''
// let ABI_SWAPPER  = [{"inputs":[{"internalType":"address","name":"rec","type":"address"},{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"bytes32","name":"pass","type":"bytes32"},{"internalType":"uint256","name":"locktime","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"amount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"inpSecret","type":"string"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fund","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"name":"hash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"passhash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"recipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"secret","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tellTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"time_lock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"time_start","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]
  // Contract Constructor Arguments
// let receiverAddr = ropAccounts[0].Address
// let RewardTotal  = utils.toWei('0.05','ether')
// let HashPassword = '0x'+crypto.createHash('sha256').update('123').digest('hex')
// let timelock = 60 // Refund Period: 1 min
// let contractArgs = [receiverAddr,RewardTotal,HashPassword,timelock]
// Promise.all(ropAccounts.map(x => ETH.AccountBalance('ropsten',x.Address))).then(console.log)
// ETH.deployContract('ropsten',ropAccounts[1].Address,ropAccounts[1].PrivKey,ABI_SWAPPER,ByteCode_Swapper,contractArgs).then(console.log())
// ETH.lockETH('ropsten',ropAccounts[1].Address,ropAccounts[1].PrivKey,'0.06').then(console.log)
// ETH.claimETH('ropsten',ropAccounts[0].Address,ropAccounts[0].PrivKey,'123').then(console.log)
// ETH.refundETH('ropsten',ropAccounts[1].Address,ropAccounts[1].PrivKey).then(console.log)